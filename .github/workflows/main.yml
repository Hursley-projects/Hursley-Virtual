# This is a basic workflow to help you get started with Actions

name: Build and Deploy

env:
  UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
   branches: [ main ]
  pull_request:
   branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  Build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      
      #Caches the library folder, which Unity generates once when opening project
      - name: Cache library files generated by Unity
        uses: actions/cache@v2.1.4
        with:
          key: Library
          path: Library
      
      - name: Build project
        uses: game-ci/unity-builder@v2.0-alpha-6
        with:
          unityVersion: 2020.2.1f1
          targetPlatform: WebGL
          
      #Allows the build to be downloaded by saving it after build
      - name: Upload build for download to git storage
        uses: actions/upload-artifact@v2
        with:
          name: Build
          path: build
        
  Deploy:
    needs: [Build] #Stops this executing before building the project
    name: Deploy to IBM Bucket
    runs-on: ubuntu-latest
    env:
      GITHUB_SHA: ${{ github.sha }}
      IBM_CLOUD_API_KEY: ${{ secrets.IBM_CLOUD_API_KEY }}
      IBM_CLOUD_REGION: eu-gb
      IBM_CONTAINER_REGISTRY_REGION: uk-south
    
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        
        #Gets the build file from the previous job in artifacts, as GitHub doesn't share between jobs
      - name: Get build file from previous job
        uses: actions/download-artifact@v2
        with:
          name: Build
          
      - name:  Authorize AWS CLI to IBM Bucket
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.S3_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.S3_SECRET_ACCESS_KEY }}
          aws-region: eu-gb-smart
          
      - name: Deploy Build to Bucket
        run: |
          aws --endpoint-url https://s3.eu-gb.cloud-object-storage.appdomain.cloud s3 cp --recursive WebGL/WebGL/ s3://ibm-hursley/
        
